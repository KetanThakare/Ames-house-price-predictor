Support Vector Regressor
from sklearn.svm import SVR
clf = SVR(C=1.0, epsilon=0.2)
clf.fit(X_train, y_train) 
SVR(C=1.0, cache_size=200, coef0=0.0, degree=3, epsilon=0.2, gamma='auto',
    kernel='rbf/poly', max_iter=-1, shrinking=True, tol=0.001, verbose=False)
clf.predict(X_test)
clf.score(X_train,y_train)

Random Forest Regressor
from sklearn.ensemble import RandomForestRegressor
regr = RandomForestRegressor(n_estimators=50, criterion=’mse’, max_depth=None, min_samples_split=20, min_samples_leaf=10, min_weight_fraction_leaf=0.0, max_features=’auto’, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=True, oob_score=False, n_jobs=1, random_state=None, verbose=0, warm_start=False)
regr.fit(X_train, y_train)
train_pred7 = regr.predict(X_train)
train_pred7 = regr.predict(X_test)

from sklearn import ensemble
gbr = ensemble.GradientBoostingRegressor(loss=’ls’, learning_rate=0.1, n_estimators=100, subsample=1.0, criterion=’friedman_mse’, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, min_impurity_decrease=0.0, min_impurity_split=None, init=None, random_state=None, max_features=None, alpha=0.9, verbose=0, max_leaf_nodes=None, warm_start=False, presort=’auto’)
gbr.fit(X_train, y_train)
train_pred6 = gbr.predict(X_train)
test_pred6 = gbr.predict(X_text)
#gbr.score(X_test,y_test)
 
